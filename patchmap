#!/usr/bin/env bash

TIMEOUT=10 #Seconds

ESPEAK=$(which espeak)
if [ -z "$*" ] || [ "$*" == '-h' ] || [ $# -lt 3 ]; then
	echo    "Usage examples:"
	echo    "  patchmap eth0 ports.txt port1              # This will map port1"
	echo    "  patchmap eth0 ports.txt port1 port2 port3  # This will map port1 port2 port3"
	echo    "  patchmap eth0 ports.txt BLU E + 1-48       # This will map BLU E01, BLU E02... BLU E48"
	echo    "  patchmap eth0 ports.txt PORT_ + 1-48       # This will map PORT_01, PORT_02... PORT_48"
	echo    "  patchmap eth0 ports.txt PORT_ + 1,4-8      # This will map PORT_1, PORT_4... PORT_8"
	echo    ""
	echo "Interfaces:"
	ip -br addr show
	echo
	[ -z "$ESPEAK" ] && echo "Install espeak for voice feedback!" || echo "Espeak detected and will be used for voice feedback!"
	exit 1
fi

INTERFACE="$1"
LOG="$2"

shift 2

BASE=$(echo "$*" | awk -F'+' '{print $1}')
SEQ=$(echo "$*" | awk -F'+' '{print $2}')
if [[ -z "${SEQ// }" ]]; then
	EXPAND="$BASE"
	BASE=""
else
	BASE="$BASE +"
	EXPAND="$SEQ"
fi
expset=$(echo $EXPAND | sed -e 's/\([0-9]\+\)-\([0-9]\+\)/$(seq -w -s, \1 \2)/g')
expset=$(echo echo $expset | sh | tr , "\n" | sort -V | tr "\n" " " | sed -e 's/,$//g')
PARAMS="$BASE $expset"
#Create an array vars from the list in $PARAMS
if [[ "$PARAMS" =~ '+' ]]; then # If the parameter format is 'const + var1 var2 ... varN'
	const=$( echo $PARAMS | cut -d'+' -f1 | sed -E -e's/^\s+//g' -e's/\s+$//g' )  # Get the constant part
	vars=( $( cut -d'+' -f2 <<< $PARAMS ) ) # Get the variables
else
	vars=( $PARAMS )
fi

function getName {
	grep -P 'System Name|Device-ID' | sed -E -e 's/.*: //g' -e "s/'//g"
}

function getPort {
	grep -P 'Port Description|Port-ID' | sed -E -e 's/.*: //g' -e "s/'//g"
}

function getIP {
	grep -P 'Management Address length|Address \(' | sed -E -e 's/.* //g' -e "s/'//g"
}

function getData {
	local FILTER='not proto UDP and (ether[12:2]=0x88cc or ether[20:2]=0x2000)'
	sudo timeout $TIMEOUT tcpdump -i $INTERFACE -s 1500 -nn -v -c 1 "$FILTER" 2> /dev/null
}

function speak {
	[ -z "$ESPEAK" ] || espeak "$*" &>/dev/null
}

echo Will use interface $INTERFACE

for var in "${vars[@]}"; do
	DEV="$const$var"
	echo "Press Enter to scan $DEV PgUp/PgDown/Esc to skip"
	speak "Enter to scan $DEV" &
	read -n 1 RESPONSE
	if [[ ! $(echo $RESPONSE | hexdump | head -n 1) =~ '0a1b' ]]; then
		speak Scanning &
		echo -ne "Scanning for up to $TIMEOUT sec...\033[0K\r"
		DATA=$(getData)
		NAME=$(getName <<< $DATA)
		PORT=$(getPort <<< $DATA)
		IP=$(getIP <<< $DATA)
	
		if [ -z "$DATA" ]; then
			LINK=$(ethtool $INTERFACE 2>/dev/null | grep 'Link detected' | awk '{print $3}')
			[ "$LINK" == "yes" ] && LINKSTATE="with link" && NAME='Link Present' || NAME='No Link'
			speak "Timeout $LINKSTATE"
			PORT='Timeout'
			IP='Timeout'
		else
			speak "Got it"
			echo "Skipping $DEV"
		fi
	else
		speak Skip
		NAME="Skipped"
		PORT="Skipped"
		IP="Skipped"
	fi
	echo $DEV,$IP,$NAME,$PORT,$(date) | tee -a $LOG
done

echo Completed logging to $LOG in $SECONDS seconds.


