#!/usr/bin/env bash

SCRIPTPATH="$(dirname $(realpath $0))"

. unifi_auth
. $SCRIPTPATH/unifi_sh_api
. $SCRIPTPATH/unifi_sh_api_custom

site=$1

find_site() {
	SITE_MATCH="$(unifi_list_sites | jq -r '.data[] | "\(.name)\t\(.desc)"' | grep -Pi "^\S+\t.*$site.*$")"
	SITE_ID_MATCH="$(cut -d$'\t' -f1 <<< "$SITE_MATCH")"
	SITE_MATCH_COUNT=$(wc -w <<< $SITE_ID_MATCH)
	[ ${SITE_MATCH_COUNT} -eq 0 ] && echo "No site match for $site" && exit 1
	[ ${SITE_MATCH_COUNT} -gt 1 ] && echo "Fund multiple sites for $site" && echo "$SITE_MATCH" | cut -d$'\t' -f2 && exit 2
	site=$SITE_ID_MATCH
}

username="$unifi_username"
password="$unifi_password"
baseurl="$unifi_baseurl"

unifi_login &>/dev/null
find_site
#unifi_list_sites | jq
#unifi_list_devices | jq -r '.data[] | "\(.ip)\t\(.mac)\t\(.name)\t\(.radio_table[0].channel)\t\(.radio_table[1].channel)"'
unifi_list_sta | jq -r '.data[] | "\(.ip)\t\(.mac)\t\(.oui)\t\(.hostname)\t\(.essid)\t\(.bssid)\t\(.channel)\t\(.signal)\t\(.noise)\t\(.rssi)"'
#unifi_list_devices | jq -r '.data[].ip'
