#!/usr/bin/env bash

DB=~/.macvendors.csv
TMP_DB="$DB.tmp"
#DB_URL="https://macaddress.io/database/macaddress.io-db.csv"
DB_URL="https://maclookup.app/downloads/csv-database/get-db"
DB_VENDOR_FIELD=2

function finish {
  rm "$TMP_DB" &>/dev/null
}
trap finish EXIT

function usage {
	echo "Usage: $0 MAC-address|OUI [MAC-address|OIU MAC-address|OUI ...]" >&2
	exit 1
}

function refreshDatabase() {
	OLD=$(find $DB -type f -mtime +7 2>&- | wc -l)
	if [ $OLD -eq 1 ] || [ ! -s "$DB" ]; then
		curl -s "$DB_URL" > "$TMP_DB"
		[ -s "$TMP_DB" ] && mv "$TMP_DB" "$DB" || rm "$TMP_DB"
	fi
	[ ! -s "$DB" ] && echo "Could not obtain MAC Database. Exiting." && exit 1
}

function findVendor() {
	local MAC="$*"
	local MAC=$(echo "${MAC^^}" | sed -E 's/[^0-9A-F]//g;s/(..)/\1:/g;s/:$//g')
	for MASKBYTES in 8 10 13; do
		LASTOUI=${OUI:-$MAC}
		OUI="${MAC:0:$MASKBYTES}"
		VENDORS=$(grep -iP "^$OUI" "$DB" | cut -d, -f$DB_VENDOR_FIELD- | tr -d '"' | sed -E 's/,(\S)/, \1/g;s/,[^,]+,[^,]+,[^,]+,[^,]+$//g')
		LASTMATCHES=${MATCHES:-0}
		MATCHES=$(echo -n "$VENDORS" | grep -c '^')
		[ "$MATCHES" -eq 0 ] && break
		VENDOR="${VENDORS}"
		LASTMATCHES=$MATCHES
		LASTOUI=$OUI
	done
	[ $LASTMATCHES -gt 1 ] && [ ${#MAC} -lt 17 ] && VENDOR="ERROR: Got more than one result. Try with the full MAC address"
	[ $LASTMATCHES -eq 0 ] && VENDOR="UNKNOWN"
	printf "%-18s\t%-6s\t%s\n" "$MAC" "$LASTOUI" "$VENDOR"
}

refreshDatabase

for QUERY in $*; do
	NORMALIZED=$(sed -E 's/[0-9a-fA-F]{2}([0-9a-fA-F]{2}\.[0-9a-fA-F]{4}\.[0-9a-fA-F]{4}\.[0-9a-fA-F]{2})/\1/g;s/[^0-9a-fA-F]//g' <<< "$QUERY")
	if [[ "$NORMALIZED" =~ ^[0-9a-fA-F.:-]+$ ]] && [ ${#NORMALIZED} -ge 6 ]; then
		findVendor "$NORMALIZED"
	else
		echo "'$QUERY' is not a MAC address/OUI"
	fi
done

[ -z "$*" ] && usage





