#!/usr/bin/env bash

SNMP_TIMEOUT=2
SCRIPT="$(basename "$0")"
OID="1.3.6.1.2.1.1.5.0"

require_commands snmpget || exit 1

function help() {
	cat <<-EOF

		$SCRIPT [-t|--t <integer>] device_IPs
		  -t or --timeout is an integer SNMP timeout in seconds
	
		Usage example:
		  $SCRIPT returns the hostname of the device. Usage:
		  $SCRIPT 192.168.3.11 192.168.3.12
		  $SCRIPT 192.168.4.13 192.168.4.14 --timeout 5

	EOF
	return 1 2>&- || exit 1
}

SNMP_RO_COMMUNITY="public"
[ -n "$(command -v pktools_vars)" ] && source pktools_vars

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
	-c|--community)
	shift # past parameter name
	SNMP_RO_COMMUNITY=$1
	shift # past argument
	;;
	-t|--timeout)
	shift # past parameter name
	[[ "$1" =~ [0-9]+ ]] && SNMP_TIMEOUT=$1
	shift # past argument
	;;
	-h|--help)
		help
	;;
	"")
	shift # past empty argument
	;;
	*)    # unknown option
	POSITIONAL+=("$1") # save it in an array for later
	shift # past argument
	;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

[ -t 0 ] && [ -z "$*" ] && help

while read DEVICE; do
	VALUE=$(timeout $SNMP_TIMEOUT snmpget -v2c -c$SNMP_RO_COMMUNITY $DEVICE "$OID" -Oe 2>&- | sed -E 's/.*STRING: //')
	[ -z "$VALUE" ] && VALUE=$(timeout $SNMP_TIMEOUT snmpget -v1 -c$SNMP_RO_COMMUNITY $DEVICE "$OID" -Oe 2>&- | sed -E 's/.*STRING: //')
	[ -z "$VALUE" ] && [ "$SNMP_RO_COMMUNITY" != "public" ] && VALUE=$(timeout $SNMP_TIMEOUT snmpget -v2c -cpublic $DEVICE "$OID" -Oe 2>&- | sed -E 's/.*STRING: //')
	[ -z "$VALUE" ] && [ "$SNMP_RO_COMMUNITY" != "public" ] && VALUE=$(timeout $SNMP_TIMEOUT snmpget -v1 -cpublic $DEVICE "$OID" -Oe 2>&- | sed -E 's/.*STRING: //')

	echo -n "$DEVICE: "
	[ -n "$VALUE" ] && echo "$VALUE" || echo "Could not determine hostname"
done < <([ -n "$*" ] && tr ' ' '\n' <<< $* ; [ ! -t 0 ] && cat)
